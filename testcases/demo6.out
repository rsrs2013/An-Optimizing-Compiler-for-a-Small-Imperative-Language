	// Assign STATIC_AREA_ADDRESS to register "r0"
 	 loadI 1024 	=> r0 
	// Initialize ind. variable "i" at offset 0 with lower bound value 0
 	 loadI 0 	=> r1 
 	 add r0, r1 	=> r2 
 	 loadI 0 	=> r5 
 	 loadI 99 	=> r6 
 	 store r5 	=> r2 
	// Generate control code for "FOR" 
L0:	 loadAI r0, 0 	=> r3 
 	 cmp_LE r3, r6 	=> r4
 	 cbr r4 	=> L1, L2
L1:	 nop 
	// Load RHS value of variable "i" at offset 0
 	 loadAI r0, 0 	=> r7 
	// Load LHS value of array variable "x" with based address 4
 	 loadI 4 	=> r9 
 	 mult r7, r9 	=> r10 
 	 loadI 4 	=> r11 
 	 add r11, r10 	=> r12 
 	 add r0, r12 	=> r8 
 	 loadI 2 	=> r13 
 	 store r13 	=> r8 
 	 loadAI r0, 0 	=> r14 
 	 addI r14, 1 	=> r15 
 	 storeAI r15 	=> r0, 0 
 	 br L0
L2:	 nop 
	// Load LHS value of variable "sum" at offset 404
 	 loadI 404 	=> r16 
 	 add r0, r16 	=> r17 
 	 loadI 0 	=> r18 
 	 store r18 	=> r17 
	// Initialize ind. variable "i" at offset 0 with lower bound value 0
 	 loadI 0 	=> r19 
 	 add r0, r19 	=> r20 
 	 loadI 0 	=> r23 
 	 loadI 99 	=> r24 
 	 store r23 	=> r20 
	// Generate control code for "FOR" 
L3:	 loadAI r0, 0 	=> r21 
 	 cmp_LE r21, r24 	=> r22
 	 cbr r22 	=> L4, L5
L4:	 nop 
	// Load LHS value of variable "sum" at offset 404
 	 loadI 404 	=> r25 
 	 add r0, r25 	=> r26 
	// Load RHS value of variable "sum" at offset 404
 	 loadAI r0, 404 	=> r27 
	// Load RHS value of variable "i" at offset 0
 	 loadAI r0, 0 	=> r28 
	// Load RHS value of array variable "x" with based address 4
 	 loadI 4 	=> r30 
 	 mult r28, r30 	=> r31 
 	 loadI 4 	=> r32 
 	 add r32, r31 	=> r33 
 	 loadAO r0, r33 	=> r29 
 	 add r27, r29 	=> r34 
 	 store r34 	=> r26 
 	 loadAI r0, 0 	=> r35 
 	 addI r35, 1 	=> r36 
 	 storeAI r36 	=> r0, 0 
 	 br L3
L5:	 nop 
	// Load RHS value of variable "sum" at offset 404
 	 loadAI r0, 404 	=> r37 
	// Code for "WRITE"
 	 storeAI r37 	=> r0, 408 
 	 output 1432
